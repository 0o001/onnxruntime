trigger: none

jobs:
- job: Onnxruntime_Linux_Nightly_ORTModule_tests

  timeoutInMinutes: 120
  pool: 'Onnxruntime-Linux-GPU-NC6sv3'

  steps:
  - checkout: self
    clean: true
    submodules: recursive

  # Entry point for all ortmodule training tests
  - script: |
      docker run \
        --gpus all \
        --shm-size=1024m \
        --rm \
        --volume $(Build.SourcesDirectory):/onnxruntime_src \
        --volume $(Build.BinariesDirectory)/${{ parameters.BuildConfig }}:/build \
        --volume /mnist:/mnist \
        --volume /bert_data:/bert_data \
        --volume /hf_models_cache:/hf_models_cache \
        ${{ parameters.DockerImageTag }} \
          bash -c "python3 -m pip uninstall -y -r /onnxruntime_src/tools/ci_build/github/linux/docker/scripts/training/requirements.txt && python3 -m pip install -r /onnxruntime_src/tools/ci_build/github/linux/docker/scripts/training/ortmodule/stage1/requirements_torch_nightly/requirements.txt && python3 -m pip install -r /onnxruntime_src/tools/ci_build/github/linux/docker/scripts/training/ortmodule/stage2/requirements.txt && rm -rf /build/onnxruntime/ && python3 -m pip install /build/dist/onnxruntime*.whl && python3 -m onnxruntime.training.ortmodule.torch_cpp_extensions.install && /build/launch_test.py --cmd_line_with_args 'python orttraining_ortmodule_tests.py --mnist /mnist --bert_data /bert_data/hf_data/glue_data/CoLA/original/raw --transformers_cache /hf_models_cache/huggingface/transformers' --cwd /build" \
    displayName: 'Run ORTModule Tests'
    condition: succeededOrFailed()
    timeoutInMinutes: 120
  - template: templates/component-governance-component-detection-steps.yml
    parameters:
      condition: 'succeeded'
