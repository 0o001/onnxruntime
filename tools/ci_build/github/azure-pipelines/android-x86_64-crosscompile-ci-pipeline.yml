jobs:
- template: templates/android-emulator-job.yml
  parameters:
    Name: Android_CI_CPU_EP
    AndroidApiVersion: 29
    AndroidAbi: x86_64
    Steps:
    - script: |
        python3 tools/ci_build/build.py \
          --android \
          --build_dir build \
          --android_sdk_path $ANDROID_HOME \
          --android_ndk_path $ANDROID_NDK_HOME \
          --android_abi=x86_64 \
          --android_api=29 \
          --skip_submodule_sync \
          --parallel \
          --cmake_generator=Ninja \
          --build_java
      displayName: CPU EP, Build and Test on Android Emulator

- template: templates/android-emulator-job.yml
  parameters:
    Name: Android_CI_NNAPI_EP_With_Code_Coverage
    AndroidApiVersion: 29
    AndroidAbi: x86_64
    Steps:
    - script: /bin/bash tools/ci_build/github/android/run_nnapi_code_coverage.sh $(pwd)
      displayName: NNAPI EP, Build, Test and Get Code Coverage on Android Emulator

    - task: PublishPipelineArtifact@0
      displayName: 'Publish code coverage report'
      inputs:
        artifactName: "coverage_rpt.txt"
        targetPath: '$(Build.SourcesDirectory)/build_nnapi/Debug/coverage_rpt.txt'
        publishLocation: 'pipeline'

- template: templates/android-emulator-job.yml
  parameters:
    Name: Android_CI_Minimal_NNAPI_EP
    AndroidApiVersion: 29
    AndroidAbi: x86_64
    Steps:
    - script: /bin/bash tools/ci_build/github/linux/ort_minimal/nnapi_minimal_build_minimal_ort_and_run_tests.sh $(pwd)
      # Build Minimal ORT with NNAPI and reduced Ops, run unit tests on Android Emulator
      displayName: Build Minimal ORT with NNAPI and run tests

- job: Update_Dashboard
  workspace:
    clean: all
  pool:
    vmImage: 'ubuntu-latest'
  dependsOn: Android_CI_NNAPI_EP_With_Code_Coverage
  # disable update dashboard of Android Code coverage until Azure CI machine cannot access database issue is resolved
  # condition: and(succeeded(), in(variables['Build.Reason'], 'IndividualCI', 'BatchedCI'))
  condition: false
  steps:
  - task: DownloadPipelineArtifact@0
    displayName: 'Download code coverage report'
    inputs:
      artifactName: 'coverage_rpt.txt'
      targetPath: '$(Build.BinariesDirectory)'

  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.x'

  - task: CmdLine@2
    inputs:
      script: |
        python3 -m pip install mysql-connector-python

  - task: PythonScript@0
    displayName: Post Android Code Coverage To DashBoard
    inputs:
      scriptPath: '$(Build.SourcesDirectory)/tools/ci_build/github/windows/post_code_coverage_to_dashboard.py'
      arguments: >
        --commit_hash=$(Build.SourceVersion)
        --report_url="https://dev.azure.com/onnxruntime/onnxruntime/_build/results?buildId=$(Build.BuildId)"
        --report_file="$(Build.BinariesDirectory)/coverage_rpt.txt"
        --branch $(Build.SourceBranchName) --arch $(Agent.OSArchitecture) --os "android" --build_config nnapi
    env:
      DASHBOARD_MYSQL_ORT_PASSWORD: $(dashboard-mysql-ort-password)
