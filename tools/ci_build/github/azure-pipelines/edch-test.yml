jobs:
- job: MacXnnpackBuild
  pool:
    vmImage: 'macOS-13'
  variables:
    PROTO_CACHE_DIR: $(Pipeline.Workspace)/proto_ccache
    ORT_CACHE_DIR: $(Pipeline.Workspace)/ort_ccache
    TODAY: $[format('{0:dd}{0:MM}{0:yyyy}', pipeline.startTime)]
  timeoutInMinutes: 150
  steps:
    - template: templates/mac-build-step-with-cache.yml
      parameters:
        WithCache: true
        Today: $(TODAY)
        AdditionalKey: ' protobuf | "$(Agent.OS)" | $(Build.SourcesDirectory)/cmake/deps.txt, $(Build.SourcesDirectory)/tools/ci_build/github/linux/docker/inference/x64/python/cpu/scripts/install_protobuf.sh'
        CacheDir: $(PROTO_CACHE_DIR)
        ChangeEveryCommit: false
        BuildStep:
          - script: |
              $(Build.SourcesDirectory)/tools/ci_build/github/linux/docker/inference/x64/python/cpu/scripts/install_protobuf.sh \
                -p $(Build.BinariesDirectory)/protobuf_install -d $(Build.SourcesDirectory)/cmake/deps.txt
            displayName: Install protobuf
            env:
              CCACHE_DIR: $(PROTO_CACHE_DIR)

    - template: templates/use-xcode-version.yml
      # TODO figure out XNNPACK EP test failures
      # Failing tests:
      #   -[XnnpackEP TestConvTranspose_qdq]
      #   -[XnnpackEP TestQDQConvS8S8_per_channel]
      parameters:
        xcodeVersion: "14.3"

    - template: templates/mac-build-step-with-cache.yml
      parameters:
        WithCache: true
        Today: $(TODAY)
        AdditionalKey: onnxruntime
        CacheDir: $(ORT_CACHE_DIR)
        ChangeEveryCommit: true
        BuildStep:
          - script: |
              python3 $(Build.SourcesDirectory)/tools/ci_build/build.py \
                --build_dir $(Build.BinariesDirectory)/mac.xnnpack \
                --build_shared \
                --use_xnnpack \
                --use_xcode \
                --config RelWithDebInfo \
                --build_apple_framework \
                --path_to_protoc_exe $(Build.BinariesDirectory)/protobuf_install/bin/protoc \
                --cmake_extra_defines onnxruntime_DEBUG_NODE_INPUTS_OUTPUTS=ON \
                --update --skip_submodule_sync \
                --build --parallel
            displayName: Build ORT with XNNPACK EP
            env:
              CC: clang
              CXX: clang++
              CCACHE_CPP2: 1
              CCACHE_DEPEND: 1
              CCACHE_SLOPPINESS: modules
              CCACHE_DIR: $(ORT_CACHE_DIR)

    - script: |
        set -e -x
        export ORT_DEBUG_NODE_IO_DUMP_OUTPUT_DATA=1
        export ORT_DEBUG_NODE_IO_DUMP_INPUT_DATA=1
        export ORT_DEBUG_NODE_IO_SNIPPET_THRESHOLD=0
        export ORT_DEBUG_NODE_IO_OP_TYPE_FILTER=QLinearConv
        ./onnxruntime_test_all --gtest_filter="XnnpackEP.TestConvTranspose_qdq"
      workingDirectory: $(Build.BinariesDirectory)/mac.xnnpack/RelWithDebInfo/RelWithDebInfo
      displayName: Run XnnpackEP.TestConvTranspose_qdq test with node output dump

    - script: |
        set -e -x
        export ORT_DEBUG_NODE_IO_DUMP_OUTPUT_DATA=1
        export ORT_DEBUG_NODE_IO_DUMP_INPUT_DATA=1
        export ORT_DEBUG_NODE_IO_SNIPPET_THRESHOLD=0
        export ORT_DEBUG_NODE_IO_OP_TYPE_FILTER=QLinearConv
        ./onnxruntime_test_all --gtest_filter="QLinearConvTest.*"
      workingDirectory: $(Build.BinariesDirectory)/mac.xnnpack/RelWithDebInfo/RelWithDebInfo
      displayName: Run QLinearConv tests with node output dump
      condition: succeededOrFailed()

    - publish: $(Build.BinariesDirectory)/mac.xnnpack/RelWithDebInfo/RelWithDebInfo/onnxruntime_test_all
      artifact: onnxruntime_test_all
      condition: succeededOrFailed()

    - publish: $(Build.BinariesDirectory)/mac.xnnpack/RelWithDebInfo/RelWithDebInfo/onnx_test_runner
      artifact: onnx_test_runner
      condition: succeededOrFailed()
