trigger: none

name: 'linux_ci_$(Date:yyyyMMdd)_$(Rev:r)'
jobs:
- job: AMDMIGraphX_CI_Build
  workspace:
    clean: all
  pool: Linux-CPU-2019
  timeoutInMinutes: 180

  # gid of video and render group on gcr-openpai-35 and -36
  variables:
    - name: video
      value: 44
    - name: render
      value: 109
    - name: RocmVersion
      value: 5.2.3

  steps:
  - task: CmdLine@2
    inputs:
      script: |
        df -h
        docker ps -a
    displayName: 'Check disk space'

  - checkout: self
    clean: true
    submodules: recursive

  - template: templates/get-docker-image-steps.yml
    parameters:
      Dockerfile: tools/ci_build/github/pai/migraphx-ci-pipeline-env.Dockerfile
      Context: tools/ci_build/github/pai
      Repository: onnxruntimetrainingmigraphx-cibuild-rocm$(RocmVersion)

  - task: CmdLine@2
    inputs:
      script: |
        df -h
        docker ps -a
    displayName: 'Check disk space'

  - task: CmdLine@2
    inputs:
      script: |
        docker run --rm \
          -e HIP_VISIBLE_DEVICES \
          --privileged \
          --security-opt seccomp=unconfined \
          --shm-size=1024m \
          --device=/dev/kfd \
          --device=/dev/dri \
          --group-add $(video) \
          --group-add $(render) \
          --user $UID:$(id -g $USER) \
          --volume $(Build.SourcesDirectory):/onnxruntime_src \
          --volume $(Build.BinariesDirectory):/build \
          --workdir /onnxruntime_src \
          onnxruntimetrainingmigraphx-cibuild-rocm$(RocmVersion) \
            python tools/ci_build/build.py \
              --config RelWithDebInfo \
              --cmake_extra_defines \
                CMAKE_HIP_COMPILER=/opt/rocm/llvm/bin/clang++ \
              --mpi_home /opt/ompi \
              --use_migraphx \
              --rocm_version=$(RocmVersion) \
              --rocm_home /opt/rocm \
              --nccl_home /opt/rocm \
              --update \
              --build_dir /build \
              --build \
              --parallel \
              --build_wheel \
              --skip_submodule_sync \
              --skip_tests
      workingDirectory: $(Build.SourcesDirectory)
    displayName: 'Build onnxruntime'

  - task: CmdLine@2
    inputs:
      script: |
        df -h
        docker ps -a
    displayName: 'Check disk space'

  - task: CmdLine@2
    displayName: 'Save Necessary Files'
    inputs:
      script: |
        mkdir $(Build.BinariesDirectory)/RelWithDebInfo_upload
        cp $(Build.BinariesDirectory)/RelWithDebInfo/onnxruntime_test_all $(Build.BinariesDirectory)/RelWithDebInfo_upload
        cp $(Build.BinariesDirectory)/RelWithDebInfo/libonnxruntime_providers* $(Build.BinariesDirectory)/RelWithDebInfo_upload
        cp $(Build.BinariesDirectory)/RelWithDebInfo/libcustom_op_library.so $(Build.BinariesDirectory)/RelWithDebInfo_upload
        cp -r $(Build.BinariesDirectory)/RelWithDebInfo/testdata/ $(Build.BinariesDirectory)/RelWithDebInfo_upload

  - task: PublishPipelineArtifact@0
    displayName: 'Publish Pipeline Artifact'
    inputs:
      artifactName: 'drop-linux'
      targetPath: '$(Build.BinariesDirectory)/RelWithDebInfo_upload'

  - template: templates/clean-agent-build-directory-step.yml

- job: AMDMIGraphX_CI_Test
  timeoutInMinutes: 30

  # gid of video and render group on gcr-openpai-35 and -36
  variables:
    - name: video
      value: 44
    - name: render
      value: 109
    - name: RocmVersion
      value: 5.2.3

  workspace:
    clean: all

  pool: 'AMD-GPU'
  dependsOn:
  - AMDMIGraphX_CI_Build
  steps:
  - task: DownloadPipelineArtifact@2
    displayName: 'Download Pipeline Artifact'
    inputs:
      buildType: 'current'
      artifactName: 'drop-linux'
      targetPath: '$(Build.BinariesDirectory)/RelWithDebInfo'

  - template: templates/get-docker-image-steps.yml
    parameters:
      Dockerfile: tools/ci_build/github/pai/migraphx-ci-pipeline-env.Dockerfile
      Context: tools/ci_build/github/pai
      Repository: onnxruntimetrainingmigraphx-cibuild-rocm$(RocmVersion)

  - task: CmdLine@2
    inputs:
      script: |
        chmod +x $(Build.BinariesDirectory)/RelWithDebInfo/onnxruntime_test_all
      workingDirectory: $(Build.SourcesDirectory)
    displayName: 'Prepare For Unit Test'

  - task: CmdLine@2
    inputs:
      script: |
        docker run --rm \
          -e HIP_VISIBLE_DEVICES \
          --privileged \
          --security-opt seccomp=unconfined \
          --shm-size=1024m \
          --device=/dev/kfd \
          --device=/dev/dri \
          --group-add $(video) \
          --group-add $(render) \
          --user $UID:$(id -g $USER) \
          --volume $(Build.SourcesDirectory):/onnxruntime_src \
          --volume $(Build.BinariesDirectory):/build \
          --workdir /build/RelWithDebInfo \
          onnxruntimetrainingmigraphx-cibuild-rocm$(RocmVersion) \
            /onnxruntime_src/tools/ci_build/github/pai/migraphx_test_launcher.sh
      workingDirectory: $(Build.SourcesDirectory)
    displayName: 'Run onnxruntime unit tests'

  - template: templates/clean-agent-build-directory-step.yml
