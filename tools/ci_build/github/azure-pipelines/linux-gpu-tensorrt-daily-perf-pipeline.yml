parameters:

- name: BuildORT
  displayName: Build ORT
  type: boolean
  default: true

- name: PostToDashboard
  displayName: Post to Dashboard
  type: boolean
  default: true

- name: RunNvidiaContainer
  displayName: Run in Nvidia Container (or set trtContainer Variable)
  type: boolean
  default: true

- name: RunDocker
  displayName: Run on Docker
  type: boolean
  default: true

- name: TrtVersion
  displayName: TensorRT Version
  type: string
  default: 8.0.1.6
  values:
  - 8.0.1.6
  - 7.2.3.4

- name: ConfigureEPs
  displayName: Configure EPs (set epList variable - separate by spaces)
  type: boolean
  default: false

- name: PublishWheel
  displayName: Publish Wheel 
  type: boolean
  default: false

- name: ModelGroups
  type: object
  default: 
    - "onnx-zoo-models"
    - "partner-models"

- name: MemTest
  displayName: Run Memory Test
  type: boolean
  default: false

jobs:
- job: build
  workspace:
    clean: all
  timeoutInMinutes: 3000
  pool: 'Onnxruntime-Linux-GPU-TensorRT-Perf'
  
  variables:
    - name: trt_dockerfile
      ${{ if eq(parameters.TrtVersion, '8.0.1.6') }}:
        value: Dockerfile.ubuntu_cuda11_4_tensorrt8_0
      ${{ if eq(parameters.TrtVersion, '7.2.3.4') }}:
        value: Dockerfile.ubuntu_cuda11_4_tensorrt7_2
        
    - name: build_args
      ${{ if eq(parameters.RunNvidiaContainer, true) }}:
        value: Dockerfile.tensorrt-perf -t $(trtContainer) -o $(Build.SourcesDirectory)/dockerfiles/Dockerfile.tensorrt
      ${{ if ne(parameters.RunNvidiaContainer, true) }}:
        value: Dockerfile.custom-trt-perf -t ${{ parameters.TrtVersion }} -o $(Build.SourcesDirectory)/tools/ci_build/github/linux/docker/$(trt_dockerfile)

    - name: anubis_image
      value: ort-master-py38
      
    - name: environment
      ${{ if eq(parameters.RunDocker, true) }}:
        value: docker.sh -d ort-$(branch) -p $(Build.SourcesDirectory)/onnxruntime/python/tools/tensorrt/perf 
      ${{ if ne(parameters.RunDocker, true) }}:
        value: machine.sh
        
    - name: with_arguments
      value: $(environment) -e "$(epList)"

  steps:
    - ${{ if eq(parameters.BuildORT, true) }}:

      - ${{ if eq(parameters.RunDocker, true) }}: 
        - script: '$(Build.SourcesDirectory)/onnxruntime/python/tools/tensorrt/perf/build/build_image.sh -p $(Build.SourcesDirectory)/onnxruntime/python/tools/tensorrt/perf/build/$(build_args) -b $(branch) -i ort-$(branch) -c 75'
          displayName: 'Build latest ORT Image'
          workingDirectory: '$(Build.SourcesDirectory)/onnxruntime/python/tools/tensorrt/perf/build'

      - ${{ if ne(parameters.RunDocker, true) }}:
        - script: 'python3 $(Build.SourcesDirectory)/onnxruntime/python/tools/tensorrt/perf/build/ort_build_latest.py -b $(branch) -c /usr/local/cuda -o ~/repos/onnxruntime/ -t ${{ parameters.TrtVersion }}'
          displayName: 'Build latest ORT'
          workingDirectory: '$(Build.SourcesDirectory)/onnxruntime/python/tools/tensorrt/perf/build'

    - script: 'docker images'
      displayName: 'sample images'
      
    - template: templates/clean-agent-build-directory-step.yml