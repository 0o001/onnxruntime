# calls tools/ci_build/get_docker_image.py

parameters:
- name: Dockerfile
  type: string
- name: Context
  type: string
- name: DockerBuildArgs
  type: string
  default: ""
- name: Repository
  type: string
- name: UseImageCacheContainerRegistry
  type: boolean
  default: true
- name: ScriptName
  type: string
  default: "tools/ci_build/get_docker_image.py"
- name: UseDockerHubCredentials
  type: boolean
  default: false
- name: DockerHubUser
  type: string
  default: ""
- name: DockerHubPassword
  type: string
  default: ""

steps:
- ${{ if parameters.UseDockerHubCredentials }}:
  - bash: |
      env | grep DOCKERHUB_USER | cut -d= -f2- | \
        docker login docker.io --username ${DOCKERHUB_PASSWORD} --password-stdin
    env:
      DOCKERHUB_USER: $(build-docker-hub-user)
      DOCKERHUB_PASSWORD: $(build-docker-hub-password)
    displayName: "Log in to docker.io"

- ${{ if eq(parameters.UseImageCacheContainerRegistry, true) }}:
  - template: with-container-registry-steps.yml
    parameters:
      Steps:
      - script: |
          ${{ parameters.ScriptName }} \
            --dockerfile "${{ parameters.Dockerfile }}" \
            --context "${{ parameters.Context }}" \
            --docker-build-args "${{ parameters.DockerBuildArgs }}" \
            --container-registry onnxruntimebuildcache \
            --repository "${{ parameters.Repository }}"
        displayName: "Get ${{ parameters.Repository }} image for ${{ parameters.Dockerfile }}"
      ContainerRegistry: onnxruntimebuildcache
- ${{ if eq(parameters.UseImageCacheContainerRegistry, false) }}:
  - script: |
      ${{ parameters.ScriptName }} \
        --dockerfile "${{ parameters.Dockerfile }}" \
        --context "${{ parameters.Context }}" \
        --docker-build-args "${{ parameters.DockerBuildArgs }}" \
        --repository "${{ parameters.Repository }}"
    displayName: "Get ${{ parameters.Repository }} image for ${{ parameters.Dockerfile }}"

- ${{ if parameters.UseDockerHubCredentials }}:
  - bash: |
      docker logout docker.io
    displayName: "Log out of docker.io"
    condition: always()
